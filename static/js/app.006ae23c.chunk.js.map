{"version":3,"sources":["node_modules/@expo/config-plugins/build/utils sync","assets/icon.png","assets/splash.png","node_modules/simple-plist/dist sync","modules/main/index.tsx","modules/main/datatable.tsx","modules/main/input.tsx","modules/main/add.tsx","modules/main/sample.tsx","modules/web/index.tsx","src/serviceWorkerRegistration.js","App.tsx","assets/adaptive-icon.png","assets/favicon.png","assets/fix_deeplink_android.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","state","useGlobalState","persistKey","selected","undefined","m","props","useSafeState","slidingRef","useRef","useState","selectedData","data","datatable","setDatatable","headers","setHeaders","useEffect","obj","title","forEach","item","variant","push","combine","options","optionIndex","results","current","allKeys","Object","optionKey","vals","i","length","res","JSON","parse","stringify","style","flex","backgroundColor","flexDirection","renderItem","index","onPress","reset","set","console","log","get","show","marginHorizontal","borderWidth","paddingHorizontal","paddingTop","paddingBottom","marginVertical","borderRadius","LibStyle","elevation","textStyle","text","x","LibObject","splice","name","ListFooterComponent","height","minWidth","alignSelf","alignItems","justifyContent","padding","color","ref","maxWidth","width","paddingVertical","defaultValue","onSave","hide","Header","sort","setSort","size","borderColor","borderLeftWidth","numeric","fontSize","textAlign","textAlignVertical","fontWeight","Cell","borderRightWidth","borderRightColor","LibUtils","number","STATUSBAR_HEIGHT","horizontal","overflow","map","toUpperCase","borderBottomWidth","row","idx","colors","toString","variantRef","titleRef","margin","label","autoCapitalize","multiline","join","getText","split","LibToastProperty","marginBottom","_name","_phone","base","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","App","globalIdx","ErrorReport","URL","process","href","origin","addEventListener","fetch","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","enableFreeze","enableScreens","Notifications","LibNotification","onAction","require","createRunOncePlugin","withAndroidManifest","activityHasSingleTaskLaunchMode","activity","$","intentFilterHasAutoVerification","intentFilter","intentFilterRemoveSchemeFromData","schemeMatcher","filter","entry","modResults","androidManifest","application","manifest","scheme","startsWith","removeExpoSchemaFromVerifiedIntentFilters"],"mappings":"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","file":"static/js/app.006ae23c.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 1078;","module.exports = __webpack_public_path__ + \"static/media/icon.608e4d9d.png\";","module.exports = __webpack_public_path__ + \"static/media/splash.59202d46.png\";","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 162;","// withHooks\n\nimport { useSafeState } from 'esoftplay';\nimport { LibIcon } from 'esoftplay/cache/lib/icon/import';\nimport { LibObject } from 'esoftplay/cache/lib/object/import';\nimport { LibSlidingup } from 'esoftplay/cache/lib/slidingup/import';\nimport { LibStyle } from 'esoftplay/cache/lib/style/import';\nimport { LibTextstyle } from 'esoftplay/cache/lib/textstyle/import';\nimport { MainDatatable } from 'esoftplay/cache/main/datatable/import';\nimport { MainInput } from 'esoftplay/cache/main/input/import';\nimport useGlobalState from 'esoftplay/global';\nimport React, { useEffect, useRef } from 'react';\nimport { FlatList, Pressable, View } from 'react-native';\n\n\n\nexport interface MainIndexArgs {\n\n}\nexport interface MainIndexProps {\n\n}\n\nconst state = useGlobalState<any[]>([], { persistKey: 'main/index' })\nconst selected = useGlobalState<any>(undefined)\nfunction combine(options: any, optionIndex = 0, results: any[] = [], current: any = {}) {\n  let allKeys = Object.keys(options);\n  let optionKey = allKeys[optionIndex];\n  let vals = options[optionKey];\n  // console.log('optionKey', optionKey, vals);\n  if (vals)\n    for (let i = 0; i < vals.length; i++) {\n      current[optionKey] = vals[i];\n      if (optionIndex + 1 < allKeys.length) {\n        combine(options, optionIndex + 1, results, current);\n      } else {\n        let res = JSON.parse(JSON.stringify(current));\n        results.push(res);\n      }\n    }\n  return results;\n}\nexport default function m(props: MainIndexProps): any {\n  const [user, setUsers] = useSafeState([])\n  const slidingRef = useRef<LibSlidingup>(null)\n  const [selectedData] = selected.useState()\n  const [data, setData] = state.useState()\n  const [datatable, setDatatable] = useSafeState<any[]>([]);\n  const [headers, setHeaders] = useSafeState([]);\n\n  useEffect(() => {\n    let obj: any = {}\n    let title: any = []\n    data.forEach((item) => {\n      obj[item.title] = item.variant\n      title.push(item.title)\n    })\n    setDatatable(combine(obj))\n    setHeaders(title)\n  }, [data])\n\n  return (\n    <View style={{ flex: 1, backgroundColor: '#fff' }} >\n      <View style={{ flexDirection: 'row' }} >\n        <FlatList\n          data={data}\n          renderItem={({ item, index }) => {\n            return (\n              <Pressable\n                onPress={() => {\n                  selected.reset()\n                  selected.set({ ...item, index })\n                  console.log(selected.get())\n                  slidingRef.current?.show()\n                }}\n                style={{ marginHorizontal: 16, flexDirection: 'row', borderWidth: 2, paddingHorizontal: 10, paddingTop: 10, paddingBottom: 8, marginVertical: 8, borderRadius: 5, backgroundColor: 'white', ...LibStyle.elevation(2) }} >\n                <View style={{ flex: 1 }} >\n                  <LibTextstyle textStyle='m_h5' text={item.title} />\n                  <LibTextstyle textStyle='m_caption' text={JSON.stringify(item.variant)} />\n                </View>\n                <Pressable onPress={() => {\n                  let x = LibObject.splice(state.get(), index, 1)()\n                  state.set(x)\n                }} >\n                  <LibIcon name='close' />\n                </Pressable>\n              </Pressable>\n            )\n          }}\n          ListFooterComponent={<View>\n            <Pressable\n              onPress={() => {\n                selected.reset()\n                slidingRef?.current?.show()\n              }}\n              style={{ backgroundColor: 'green', height: 30, borderRadius: 5, minWidth: 300, alignSelf: 'center', marginVertical: 40, marginHorizontal: 16, alignItems: 'center', justifyContent: 'center', padding: 20, ...LibStyle.elevation(4) }} >\n              <LibTextstyle text='Add' textStyle='m_button' style={{ color: 'white' }} />\n            </Pressable>\n          </View>}\n        />\n      </View>\n      {\n        data.length > 0 &&\n        <MainDatatable headers={headers} data={datatable} />\n      }\n      <LibSlidingup ref={slidingRef} >\n        <View style={{ alignItems: 'center' }} >\n          <View style={{ maxWidth: 500, minWidth: LibStyle.width - 50, backgroundColor: 'white', paddingVertical: 20, borderRadius: 10 }} >\n            <MainInput defaultValue={selectedData} onSave={(title, variant) => {\n              let x\n              if (!selectedData) {\n                x = LibObject.push(state.get(), { title: title, variant: variant })()\n              } else {\n                x = LibObject.set(state.get(), { title: title, variant: variant })(selectedData.index)\n              }\n              state.set(x)\n              slidingRef.current?.hide()\n            }} />\n          </View>\n        </View>\n      </LibSlidingup>\n    </View>\n  )\n}\n","// withHooks\n\nimport { useSafeState } from 'esoftplay';\nimport { LibDropdown } from 'esoftplay/cache/lib/dropdown/import';\nimport { LibIcon } from 'esoftplay/cache/lib/icon/import';\nimport { LibStyle } from 'esoftplay/cache/lib/style/import';\nimport { LibUtils } from 'esoftplay/cache/lib/utils/import';\nimport React from 'react';\nimport { Pressable, ScrollView, Text, TextInput, View } from 'react-native';\n\nexport interface LibDatatableArgs {\n\n}\nexport interface LibDatatableProps {\n  headers: string[],\n  data: any[]\n}\n\n\nconst datas = [\n  {\n    id: 1,\n    nama: \"Munawar Kholil\",\n    phone: \"081234566789\",\n    age: 1234567\n  },\n  {\n    id: 2,\n    nama: \"Munawar Masmun\",\n    phone: \"081234566789\",\n    age: 1234567\n  },\n  {\n    id: 3,\n    nama: \"Munawar Cholil\",\n    phone: \"081234566789\",\n    age: 1234567\n  },\n  {\n    id: 4,\n    nama: \"Munawar Aja\",\n    phone: \"081234566789\",\n    age: 1234567\n  },\n  {\n    id: 4,\n    nama: \"Munawar Aja\",\n    phone: \"081234566789\",\n    age: 1234567\n  },\n  {\n    id: 4,\n    nama: \"Munawar Aja\",\n    phone: \"081234566789\",\n    age: 1234567\n  },\n  {\n    id: 4,\n    nama: \"Munawar Aja\",\n    phone: \"081234566789\",\n    age: 1234567\n  },\n  {\n    id: 4,\n    nama: \"Munawar Aja\",\n    phone: \"081234566789\",\n    age: 1234567\n  },\n  {\n    id: 4,\n    nama: \"Munawar Aja\",\n    phone: \"081234566789\",\n    age: 1234567\n  },\n  {\n    id: 4,\n    nama: \"Munawar Aja\",\n    phone: \"081234566789\",\n    age: 1234567\n  }\n]\n\nexport interface HeaderProps {\n  title: string,\n  numeric?: boolean,\n  size?: number\n}\n\n\nconst Header = {\n  Text: (props: HeaderProps) => {\n    const [sort, setSort] = useSafeState(0)\n    return (\n      <View style={{ borderWidth: 1, width: 70 * (props.size || 1), borderColor: \"#a9a9a9\", paddingHorizontal: 11, paddingVertical: 10, borderLeftWidth: 0, flexDirection: props.numeric ? 'row-reverse' : 'row', backgroundColor: '#efefef', justifyContent: 'flex-start', alignItems: 'center' }} onPress={() => { setSort(sort < 2 ? sort + 1 : 0) }} >\n        <Text style={{ fontSize: 20, textAlign: props.numeric ? 'right' : 'left', textAlignVertical: 'center', fontWeight: 'bold', marginHorizontal: 5 }} >{props.title}</Text>\n      </View>\n    )\n  },\n  TextSortable: (props: HeaderProps) => {\n    const [sort, setSort] = useSafeState(0)\n    return (\n      <Pressable style={{ borderWidth: 1, width: 70 * (props.size || 1), borderColor: \"#a9a9a9\", paddingHorizontal: 11, paddingVertical: 10, borderLeftWidth: 0, flexDirection: props.numeric ? 'row-reverse' : 'row', backgroundColor: '#efefef', justifyContent: 'flex-start', alignItems: 'center' }} onPress={() => { setSort(sort < 2 ? sort + 1 : 0) }} >\n        <Text selectable={false} style={{ fontSize: 20, textDecorationLine: 'underline', textAlign: props.numeric ? 'right' : 'left', textAlignVertical: 'center', fontWeight: 'bold', marginHorizontal: 5 }} >{props.title}</Text>\n        {\n          sort == 1 ?\n            <LibIcon.FontAwesome name={'sort-asc'} size={16} style={{ marginTop: 4 }} /> :\n            sort == 2 ?\n              <LibIcon.FontAwesome name={'sort-desc'} size={16} style={{ marginTop: 4 }} />\n              : <LibIcon.FontAwesome name={'sort'} size={16} style={{ marginTop: 4, opacity: 0 }} />\n        }\n      </Pressable>\n    )\n  },\n  Checkbox: (props: any) => {\n    const [sort, setSort] = useSafeState(0)\n    return (\n      <Pressable style={{ borderWidth: 1, width: 70 * (props.size || 1), borderColor: \"#a9a9a9\", paddingHorizontal: 11, paddingVertical: 10, borderLeftWidth: 0, flexDirection: props.numeric ? 'row-reverse' : 'row', backgroundColor: '#efefef', justifyContent: 'flex-start', alignItems: 'center' }} onPress={() => { setSort(sort < 2 ? sort + 1 : 0) }} >\n        <LibIcon name='checkbox-blank-outline' style={{ marginTop: 5 }} />\n        <Text style={{ fontSize: 20, textAlign: props.numeric ? 'right' : 'left', textAlignVertical: 'center', fontWeight: 'bold', marginHorizontal: 5 }} >{props.title}</Text>\n      </Pressable>\n    )\n  }\n}\n\nconst Cell = {\n  View: (props: any) => {\n    return (\n      <View style={{ borderWidth: 1, width: 70 * (props.size || 1), borderColor: \"transparent\", paddingHorizontal: 11, paddingVertical: 5, borderRightWidth: 1, borderRightColor: '#a9a9a9', flexDirection: 'row', justifyContent: props.numeric ? 'flex-end' : 'flex-start', alignItems: 'center' }} >\n        {props.children}\n      </View>\n    )\n  },\n  Text: (props: any) => {\n    return (\n      <View style={{ borderWidth: 1, width: 70 * (props.size || 1), borderColor: \"transparent\", paddingHorizontal: 11, paddingVertical: 10, borderRightWidth: 1, borderRightColor: '#a9a9a9', flexDirection: 'row', justifyContent: props.numeric ? 'flex-end' : 'flex-start', alignItems: 'center' }} >\n        <Text style={{ fontSize: 18, color: '#232323', textAlign: props.numeric ? 'right' : 'left', textAlignVertical: 'center', marginHorizontal: 5 }} >{props.numeric ? LibUtils.number(props.title) : props.title}</Text>\n      </View>\n    )\n  },\n  Button: (props: any) => {\n    return (\n      <View style={{ borderWidth: 1, width: 70 * (props.size || 1), borderColor: \"transparent\", paddingHorizontal: 11, paddingVertical: 5, borderRightWidth: 1, borderRightColor: '#a9a9a9', flexDirection: 'row', justifyContent: props.numeric ? 'flex-end' : 'flex-start', alignItems: 'center' }} >\n        <Pressable style={{ padding: 6, borderRadius: 5, backgroundColor: 'white', ...LibStyle.elevation(3) }} >\n          <Text selectable={false} style={{ color: 'indigo', textAlign: 'center', fontWeight: \"bold\", paddingHorizontal: 10 }} >{props.title}</Text>\n        </Pressable>\n      </View>\n    )\n  },\n  Input: (props: any) => {\n    return (\n      <View style={{ borderWidth: 1, width: 70 * (props.size || 1), borderColor: \"transparent\", paddingHorizontal: 11, paddingVertical: 5, borderRightWidth: 1, borderRightColor: '#a9a9a9', flexDirection: 'row', justifyContent: props.numeric ? 'flex-end' : 'flex-start', alignItems: 'center' }} >\n        <TextInput placeholder={props.title.toString()} placeholderTextColor={\"#aaa\"} style={{ flex: 1, padding: 5, borderRadius: 10, borderWidth: 1, borderColor: '#a9a9a9', outlineWidth: 0 }} />\n      </View>\n    )\n  },\n  Checkbox: (props: any) => {\n    return (\n      <Pressable style={{ borderWidth: 1, width: 70 * (props.size || 1), borderColor: \"transparent\", paddingHorizontal: 11, paddingVertical: 5, borderRightWidth: 1, borderRightColor: '#a9a9a9', flexDirection: 'row', justifyContent: props.numeric ? 'flex-end' : 'flex-start', alignItems: 'center' }} >\n        <LibIcon name='checkbox-blank-outline' style={{ marginTop: 5 }} />\n        <Text style={{ fontSize: 18, color: '#232323', textAlign: props.numeric ? 'right' : 'left', textAlignVertical: 'center', marginHorizontal: 5 }} >{props.numeric ? LibUtils.number(props.title) : props.title}</Text>\n      </Pressable>\n    )\n  }\n}\n\nconst Footer = {\n  Paginate: (props: any) => {\n    return (\n      <View style={{ flexDirection: 'row', alignSelf: 'flex-end', marginHorizontal: 16, marginVertical: 10, alignItems: 'center' }} >\n        <Text style={{ marginRight: 10, color: '#555' }} >Page 1 of 6</Text>\n        <Pressable style={{ borderRadius: 2, height: 40, width: 40, alignItems: 'center', justifyContent: 'center', marginLeft: 2 }} >\n          <LibIcon name={'page-first'} />\n        </Pressable>\n        <Pressable style={{ borderRadius: 2, height: 40, width: 40, alignItems: 'center', justifyContent: 'center', marginLeft: 2 }} >\n          <LibIcon name={'chevron-left'} />\n        </Pressable>\n        <Pressable style={{ borderRadius: 2, height: 40, width: 40, alignItems: 'center', justifyContent: 'center', marginLeft: 2 }} >\n          <LibIcon name={'chevron-right'} />\n        </Pressable>\n        <Pressable style={{ borderRadius: 2, height: 40, width: 40, alignItems: 'center', justifyContent: 'center', marginLeft: 2 }} >\n          <LibIcon name={'page-last'} />\n        </Pressable>\n      </View>\n    )\n  }\n}\n\nconst rawData = [\n  { id: 1, value: 'ABCD' },\n  { id: 1, value: 'ABCD' },\n  { id: 1, value: 'ABCD' },\n  { id: 1, value: 'ABCD' },\n]\n\nfunction DropDownItems({ title }: any) {\n  const styles = {\n    popupItem: {\n      justifyContent: 'center',\n      paddingLeft: 20,\n      paddingVertical: 15,\n      borderBottomWidth: 0.7,\n      borderBottomColor: '#ccc',\n    },\n    popupItemText: {},\n  }\n  return (\n    <View style={styles.popupItem}>\n      <Text style={styles.popupItemText}>{title}</Text>\n    </View>\n  );\n}\n\n\nconst Filter = (props: any) => {\n\n  const [show, setShow] = useSafeState(false)\n  const [filter, setFilter] = useSafeState<any>()\n\n\n  return (\n    <View style={{ flexDirection: 'row', padding: 16, alignItems: 'flex-start' }} >\n      <TextInput placeholder={'Search'} placeholderTextColor={\"#aaa\"} style={{ flex: 1, padding: 5, borderRadius: 3, paddingVertical: 11, borderWidth: 1, borderColor: '#afafaf', outlineWidth: 0 }} />\n      <View style={{ marginLeft: 10 }} >\n        <LibDropdown\n          label=\"Select or Enter\"\n          options={rawData}\n          value={filter}\n          renderItem={(item) => (\n            <Pressable style={{ zIndex: 500 }} key={item.id} onPress={() => { setFilter(item) }}>\n              <DropDownItems title={item.value} />\n            </Pressable>\n          )}\n        />\n      </View>\n    </View>\n  )\n}\n\nexport default function m(props: LibDatatableProps): any {\n\n  console.log(props.data)\n\n  return (\n    <View style={{ flex: 1, paddingTop: LibStyle.STATUSBAR_HEIGHT + 20 }} >\n      {/* <Filter /> */}\n      <ScrollView horizontal style={{ backgroundColor: 'white' }} >\n        <View>\n          <View style={{ flexDirection: 'row', overflow: 'hidden', borderLeftWidth: 1, borderColor: \"#a9a9a9\", marginHorizontal: 16 }} >\n            <Header.Text title={'No'} numeric />\n            {\n              props.headers.map((title) => {\n                return (<Header.Text title={title.toUpperCase()} size={2} />)\n              })\n            }\n          </View>\n          <ScrollView>\n            <View style={{ overflow: 'hidden', marginHorizontal: 16, borderLeftWidth: 1, borderColor: \"#a9a9a9\", borderBottomWidth: 1 }} >\n              {\n                props?.data?.map?.((row, idx) => {\n                  const colors = idx % 2 != 0 ? '#f9f9ff' : \"white\"\n                  return (\n                    <View key={idx.toString()} style={{ flexDirection: 'row', backgroundColor: colors }} >\n                      <Cell.Text title={idx + 1} numeric />\n                      {\n                        props.headers.map((title) => {\n                          return (\n                            <Cell.Text title={row[title]} size={2} />\n                          )\n                        })\n                      }\n                      {/* <Cell.Text title={} numeric /> */}\n                    </View>\n                  )\n                })\n              }\n            </View>\n            {/* <Footer.Paginate /> */}\n          </ScrollView>\n        </View>\n      </ScrollView>\n    </View>\n  )\n}","// withHooks\n\nimport { LibInput } from 'esoftplay/cache/lib/input/import';\nimport { LibStyle } from 'esoftplay/cache/lib/style/import';\nimport { LibTextstyle } from 'esoftplay/cache/lib/textstyle/import';\nimport { LibToastProperty } from 'esoftplay/cache/lib/toast/import';\nimport React, { useRef } from 'react';\nimport { Pressable, View } from 'react-native';\n\n\nexport interface MainInputArgs {\n\n}\nexport interface MainInputProps {\n  onSave: (title: string, variant: any[]) => void\n  defaultValue: any\n}\nexport default function m(props: MainInputProps): any {\n  const variantRef = useRef<LibInput>(null)\n  const titleRef = useRef<LibInput>(null)\n\n  return (\n    <View>\n      <LibTextstyle textStyle='largeTitle' text='Combinator' style={{ margin: 16 }} />\n      <LibInput\n        ref={titleRef}\n        label='Name'\n        defaultValue={props?.defaultValue?.title}\n        autoCapitalize='characters'\n      />\n      <LibInput\n        ref={variantRef}\n        label={'Variant (Pisahkan dengan enter)'}\n        multiline\n        defaultValue={props?.defaultValue?.variant?.join('\\n')}\n        style={{ height: 200 }}\n      />\n      <Pressable\n        onPress={() => {\n          if (!titleRef.current?.getText()) {\n            LibToastProperty.show(\"Title tidak boleh kosong\")\n            return\n          }\n          if (!variantRef.current?.getText()) {\n            LibToastProperty.show(\"Variant tidak boleh kosong\")\n            return\n          }\n          props.onSave(titleRef?.current?.getText(), variantRef.current?.getText().split('\\n'))\n        }}\n        style={[{ backgroundColor: 'green', height: 34, borderRadius: 5, alignItems: 'center', justifyContent: 'center', marginHorizontal: 16, padding: 20 }, LibStyle.elevation(4)]} >\n        <LibTextstyle textStyle='m_button' text='Save' style={{ color: 'white' }} />\n      </Pressable>\n    </View>\n  )\n}","// withHooks\n\nimport { LibInput } from 'esoftplay/cache/lib/input/import';\nimport { LibTextstyle } from 'esoftplay/cache/lib/textstyle/import';\nimport React from 'react';\nimport { View } from 'react-native';\n\n\nexport interface MainAddArgs {\n\n}\nexport interface MainAddProps {\n\n}\nexport default function m(props: MainAddProps): any {\n  return (\n    <View style={{ flex: 1, padding: 16, backgroundColor: 'white', borderRadius:28 }} >\n      <LibTextstyle textStyle='largeTitle' text='Tambah' style={{ marginHorizontal: 16, marginBottom: 50 }} />\n      <LibInput label='Nama' />\n    </View>\n  )\n}","// withHooks\n\nimport { useSafeState } from 'esoftplay';\nimport { LibInput } from 'esoftplay/cache/lib/input/import';\nimport React, { useEffect, useRef } from 'react';\nimport { View } from 'react-native';\n\nexport interface MainSampleArgs {\n\n}\nexport interface MainSampleProps {\n\n}\nexport default function m(props: MainSampleProps): any {\n  const _name = useRef<LibInput>(null)\n  const [user, setUser] = useSafeState(undefined);\n  const _phone = useRef<LibInput>(null);\n\n  useEffect(() => {\n    _name.current?.getText()\n  }, [])\n\n  return (\n    <View style={{ backgroundColor: 'orange', flex: 1 }} >\n      <LibInput\n        base\n        ref={_name}\n        label={''}\n      />\n      <LibInput\n        ref={_phone}\n        label={'user'}\n      />\n    </View>\n  )\n}","// withHooks\n\n\nexport interface WebIndexArgs {\n  \n}\nexport interface WebIndexProps {\n  \n}\nexport default function m(props: WebIndexProps): any {\n  return null\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  const isEnvProduction = process.env.NODE_ENV === \"production\";\n  if (isEnvProduction && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}","\nimport { LibNotification } from 'esoftplay/cache/lib/notification/import';\nimport { UserIndex } from 'esoftplay/cache/user/index/import';\nimport * as ErrorReport from 'esoftplay/error';\nimport { globalIdx } from 'esoftplay/global';\nimport * as Notifications from 'expo-notifications';\nimport React, { useEffect } from 'react';\nimport { enableFreeze, enableScreens } from 'react-native-screens';\n\t\t\n\nimport * as serviceWorkerRegistration from \"./src/serviceWorkerRegistration\";\nserviceWorkerRegistration.register();\nenableFreeze()\nenableScreens()\n\t\t\n\nNotifications.addNotificationResponseReceivedListener(x => LibNotification.onAction(x));\n\nexport default function App() {\n\tuseEffect(() => {\n\t\tglobalIdx.reset()\n\t\tErrorReport.getError()\n\t}, [])\n\n\treturn (<UserIndex />)\n}","module.exports = __webpack_public_path__ + \"static/media/adaptive-icon.e4e80208.png\";","module.exports = __webpack_public_path__ + \"static/media/favicon.fa4783d1.png\";","const { createRunOncePlugin, withAndroidManifest } = require('@expo/config-plugins');\n\n/**\n * @typedef {import('@expo/config-plugins').ConfigPlugin} ConfigPlugin\n * @typedef {import('@expo/config-plugins').AndroidManifest} AndroidManifest\n */\n\n/**\n * Remove the custom Expo dev client scheme from intent filters, which are set to `autoVerify=true`.\n * The custom scheme `<data android:scheme=\"exp+<slug>\"/>` seems to block verification for these intent filters.\n * This plugin makes sure there is no scheme in the autoVerify intent filters, that starts with `exp+`.\n * \n * @type {ConfigPlugin}\n */\nconst withAndroidVerfiedLinksWorkaround = (config) => (\n  withAndroidManifest(config, (config) => {\n    config.modResults = removeExpoSchemaFromVerifiedIntentFilters(config.modResults);\n    return config;\n  })\n);\n\n/**\n * Iterate over all `autoVerify=true` intent filters, and pull out schemes starting with `exp+`.\n * \n * @param {AndroidManifest} androidManifest\n */\nfunction removeExpoSchemaFromVerifiedIntentFilters(androidManifest) {\n  // see: https://github.com/expo/expo-cli/blob/f1624c75b52cc1c4f99354ec4021494e0eff74aa/packages/config-plugins/src/android/Scheme.ts#L164-L179\n  for (const application of androidManifest.manifest.application || []) {\n    for (const activity of application.activity || []) {\n      if (activityHasSingleTaskLaunchMode(activity)) {\n        for (const intentFilter of activity['intent-filter'] || []) {\n          if (intentFilterHasAutoVerification(intentFilter) && intentFilter?.data) {\n            intentFilter.data = intentFilterRemoveSchemeFromData(intentFilter, (scheme) => scheme?.startsWith('exp+'));\n          }\n        }\n        break;\n      }\n    }\n  }\n\n  return androidManifest;\n}\n\n/**\n * Determine if the activity should contain the intent filters to clean.\n * \n * @see https://github.com/expo/expo-cli/blob/f1624c75b52cc1c4f99354ec4021494e0eff74aa/packages/config-plugins/src/android/Scheme.ts#L166\n */\nfunction activityHasSingleTaskLaunchMode(activity) {\n  return activity?.$?.['android:launchMode'] === 'singleTask';\n}\n\n/**\n * Determine if the intent filter has `autoVerify=true`.\n */\nfunction intentFilterHasAutoVerification(intentFilter) {\n  return intentFilter?.$?.['android:autoVerify'] === 'true';\n}\n\n/**\n * Remove schemes from the intent filter that matches the function.\n */\nfunction intentFilterRemoveSchemeFromData(intentFilter, schemeMatcher) {\n  return intentFilter?.data?.filter(entry => !schemeMatcher(entry?.$['android:scheme'] || ''));\n}\n\nmodule.exports = createRunOncePlugin(withAndroidVerfiedLinksWorkaround, 'withAndroidVerfiedLinksWorkaround', '1.0.0');"],"sourceRoot":""}