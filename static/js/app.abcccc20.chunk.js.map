{"version":3,"sources":["node_modules/@expo/config-plugins/build/utils sync","assets/icon.png","assets/splash.png","node_modules/simple-plist/dist sync","modules/main/add.tsx","modules/main/datatable.tsx","modules/main/sample.tsx","modules/web/index.tsx","libs/firestore.ts","modules/main/index.tsx","src/serviceWorkerRegistration.js","App.tsx","assets/adaptive-icon.png","assets/favicon.png","assets/fix_deeplink_android.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","m","props","style","flex","padding","backgroundColor","borderRadius","textStyle","text","marginHorizontal","marginBottom","label","datas","nama","phone","age","Header","useSafeState","sort","setSort","borderWidth","width","size","borderColor","paddingHorizontal","paddingVertical","borderLeftWidth","flexDirection","numeric","justifyContent","alignItems","onPress","fontSize","textAlign","textAlignVertical","fontWeight","title","selectable","textDecorationLine","FontAwesome","name","marginTop","opacity","Cell","borderRightWidth","borderRightColor","color","LibUtils","number","Footer","alignSelf","marginVertical","marginRight","height","marginLeft","data","paddingTop","LibStyle","STATUSBAR_HEIGHT","horizontal","overflow","borderBottomWidth","map","row","idx","colors","toString","_name","useRef","undefined","_phone","useEffect","current","getText","base","ref","Firestore","init","_global","firebaseApp","initializeApp","db","firebaseFirestore","getFirestore","add","doc","collection","get","path","cb","colRef","getDocs","then","snap","docs","forEach","push","listen","update","query","paginate","list","console","log","View","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","App","globalIdx","reset","ErrorReport","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","enableFreeze","enableScreens","Notifications","x","LibNotification","onAction","require","createRunOncePlugin","withAndroidManifest","activityHasSingleTaskLaunchMode","activity","$","intentFilterHasAutoVerification","intentFilter","intentFilterRemoveSchemeFromData","schemeMatcher","filter","entry","modResults","androidManifest","application","manifest","scheme","startsWith","removeExpoSchemaFromVerifiedIntentFilters"],"mappings":"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","file":"static/js/app.abcccc20.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 1050;","module.exports = __webpack_public_path__ + \"static/media/icon.608e4d9d.png\";","module.exports = __webpack_public_path__ + \"static/media/splash.59202d46.png\";","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 162;","// withHooks\n\nimport { LibInput } from 'esoftplay/cache/lib/input/import';\nimport { LibTextstyle } from 'esoftplay/cache/lib/textstyle/import';\nimport React from 'react';\nimport { View } from 'react-native';\n\n\nexport interface MainAddArgs {\n\n}\nexport interface MainAddProps {\n\n}\nexport default function m(props: MainAddProps): any {\n  return (\n    <View style={{ flex: 1, padding: 16, backgroundColor: 'white', borderRadius:28 }} >\n      <LibTextstyle textStyle='largeTitle' text='Tambah' style={{ marginHorizontal: 16, marginBottom: 50 }} />\n      <LibInput label='Nama' />\n    </View>\n  )\n}","// withHooks\n\nimport { useSafeState } from 'esoftplay';\nimport { LibIcon } from 'esoftplay/cache/lib/icon/import';\nimport { LibStyle } from 'esoftplay/cache/lib/style/import';\nimport { LibUtils } from 'esoftplay/cache/lib/utils/import';\nimport React from 'react';\nimport { Pressable, ScrollView, Text, TextInput, View } from 'react-native';\n\n\nexport interface LibDatatableArgs {\n\n}\nexport interface LibDatatableProps {\n\n}\n\n\nconst datas = [\n  {\n    id: 1,\n    nama: \"Munawar Kholil\",\n    phone: \"081234566789\",\n    age: 1234567\n  },\n  {\n    id: 2,\n    nama: \"Munawar Masmun\",\n    phone: \"081234566789\",\n    age: 1234567\n  },\n  {\n    id: 3,\n    nama: \"Munawar Cholil\",\n    phone: \"081234566789\",\n    age: 1234567\n  },\n  {\n    id: 4,\n    nama: \"Munawar Aja\",\n    phone: \"081234566789\",\n    age: 1234567\n  },\n  {\n    id: 4,\n    nama: \"Munawar Aja\",\n    phone: \"081234566789\",\n    age: 1234567\n  },\n  {\n    id: 4,\n    nama: \"Munawar Aja\",\n    phone: \"081234566789\",\n    age: 1234567\n  },\n  {\n    id: 4,\n    nama: \"Munawar Aja\",\n    phone: \"081234566789\",\n    age: 1234567\n  },\n  {\n    id: 4,\n    nama: \"Munawar Aja\",\n    phone: \"081234566789\",\n    age: 1234567\n  },\n  {\n    id: 4,\n    nama: \"Munawar Aja\",\n    phone: \"081234566789\",\n    age: 1234567\n  },\n  {\n    id: 4,\n    nama: \"Munawar Aja\",\n    phone: \"081234566789\",\n    age: 1234567\n  }\n]\n\nexport interface HeaderProps {\n  title: string,\n  numeric?: boolean,\n  size?: number\n}\n\n\nconst Header = {\n  Text: (props: HeaderProps) => {\n    const [sort, setSort] = useSafeState(0)\n    return (\n      <View style={{ borderWidth: 1, width: 70 * (props.size || 1), borderColor: \"#a9a9a9\", paddingHorizontal: 11, paddingVertical: 10, borderLeftWidth: 0, flexDirection: props.numeric ? 'row-reverse' : 'row', backgroundColor: '#efefef', justifyContent: 'flex-start', alignItems: 'center' }} onPress={() => { setSort(sort < 2 ? sort + 1 : 0) }} >\n        <Text style={{ fontSize: 20, textAlign: props.numeric ? 'right' : 'left', textAlignVertical: 'center', fontWeight: 'bold', marginHorizontal: 5 }} >{props.title}</Text>\n      </View>\n    )\n  },\n  TextSortable: (props: HeaderProps) => {\n    const [sort, setSort] = useSafeState(0)\n    return (\n      <Pressable style={{ borderWidth: 1, width: 70 * (props.size || 1), borderColor: \"#a9a9a9\", paddingHorizontal: 11, paddingVertical: 10, borderLeftWidth: 0, flexDirection: props.numeric ? 'row-reverse' : 'row', backgroundColor: '#efefef', justifyContent: 'flex-start', alignItems: 'center' }} onPress={() => { setSort(sort < 2 ? sort + 1 : 0) }} >\n        <Text selectable={false} style={{ fontSize: 20, textDecorationLine: 'underline', textAlign: props.numeric ? 'right' : 'left', textAlignVertical: 'center', fontWeight: 'bold', marginHorizontal: 5 }} >{props.title}</Text>\n        {\n          sort == 1 ?\n            <LibIcon.FontAwesome name={'sort-asc'} size={16} style={{ marginTop: 4 }} /> :\n            sort == 2 ?\n              <LibIcon.FontAwesome name={'sort-desc'} size={16} style={{ marginTop: 4 }} />\n              : <LibIcon.FontAwesome name={'sort'} size={16} style={{ marginTop: 4, opacity: 0 }} />\n        }\n      </Pressable>\n    )\n  },\n  Checkbox: (props: any) => {\n    const [sort, setSort] = useSafeState(0)\n    return (\n      <Pressable style={{ borderWidth: 1, width: 70 * (props.size || 1), borderColor: \"#a9a9a9\", paddingHorizontal: 11, paddingVertical: 10, borderLeftWidth: 0, flexDirection: props.numeric ? 'row-reverse' : 'row', backgroundColor: '#efefef', justifyContent: 'flex-start', alignItems: 'center' }} onPress={() => { setSort(sort < 2 ? sort + 1 : 0) }} >\n        <LibIcon name='checkbox-blank-outline' style={{ marginTop: 5 }} />\n        <Text style={{ fontSize: 20, textAlign: props.numeric ? 'right' : 'left', textAlignVertical: 'center', fontWeight: 'bold', marginHorizontal: 5 }} >{props.title}</Text>\n      </Pressable>\n    )\n  }\n}\n\nconst Cell = {\n  View: (props: any) => {\n    return (\n      <View style={{ borderWidth: 1, width: 70 * (props.size || 1), borderColor: \"transparent\", paddingHorizontal: 11, paddingVertical: 5, borderRightWidth: 1, borderRightColor: '#a9a9a9', flexDirection: 'row', justifyContent: props.numeric ? 'flex-end' : 'flex-start', alignItems: 'center' }} >\n        {props.children}\n      </View>\n    )\n  },\n  Text: (props: any) => {\n    return (\n      <View style={{ borderWidth: 1, width: 70 * (props.size || 1), borderColor: \"transparent\", paddingHorizontal: 11, paddingVertical: 10, borderRightWidth: 1, borderRightColor: '#a9a9a9', flexDirection: 'row', justifyContent: props.numeric ? 'flex-end' : 'flex-start', alignItems: 'center' }} >\n        <Text style={{ fontSize: 18, color: '#232323', textAlign: props.numeric ? 'right' : 'left', textAlignVertical: 'center', marginHorizontal: 5 }} >{props.numeric ? LibUtils.number(props.title) : props.title}</Text>\n      </View>\n    )\n  },\n  Button: (props: any) => {\n    return (\n      <View style={{ borderWidth: 1, width: 70 * (props.size || 1), borderColor: \"transparent\", paddingHorizontal: 11, paddingVertical: 5, borderRightWidth: 1, borderRightColor: '#a9a9a9', flexDirection: 'row', justifyContent: props.numeric ? 'flex-end' : 'flex-start', alignItems: 'center' }} >\n        <Pressable style={{ padding: 6, borderRadius: 5, backgroundColor: 'indigo' }} >\n          <Text style={{ color: 'white', textAlign: 'center', fontWeight: \"bold\", paddingHorizontal: 10 }} >{props.title}</Text>\n        </Pressable>\n      </View>\n    )\n  },\n  Input: (props: any) => {\n    return (\n      <View style={{ borderWidth: 1, width: 70 * (props.size || 1), borderColor: \"transparent\", paddingHorizontal: 11, paddingVertical: 5, borderRightWidth: 1, borderRightColor: '#a9a9a9', flexDirection: 'row', justifyContent: props.numeric ? 'flex-end' : 'flex-start', alignItems: 'center' }} >\n        <TextInput placeholder={props.title.toString()} placeholderTextColor={\"#aaa\"} style={{ flex: 1, padding: 5, borderRadius: 10, borderWidth: 1, borderColor: '#a9a9a9', outlineWidth: 0 }} />\n      </View>\n    )\n  },\n  Checkbox: (props: any) => {\n    return (\n      <Pressable style={{ borderWidth: 1, width: 70 * (props.size || 1), borderColor: \"transparent\", paddingHorizontal: 11, paddingVertical: 5, borderRightWidth: 1, borderRightColor: '#a9a9a9', flexDirection: 'row', justifyContent: props.numeric ? 'flex-end' : 'flex-start', alignItems: 'center' }} >\n        <LibIcon name='checkbox-blank-outline' style={{ marginTop: 5 }} />\n        <Text style={{ fontSize: 18, color: '#232323', textAlign: props.numeric ? 'right' : 'left', textAlignVertical: 'center', marginHorizontal: 5 }} >{props.numeric ? LibUtils.number(props.title) : props.title}</Text>\n      </Pressable>\n    )\n  }\n}\n\nconst Footer = {\n  Paginate: (props: any) => {\n    return (\n      <View style={{ flexDirection: 'row', alignSelf: 'flex-end', marginHorizontal: 16, marginVertical: 10, alignItems: 'center' }} >\n        <Text style={{ marginRight: 10, color: '#555' }} >Page 1 of 6</Text>\n        <Pressable style={{ borderRadius: 2, height: 40, width: 40, alignItems: 'center', justifyContent: 'center', marginLeft: 2 }} >\n          <LibIcon name={'page-first'} />\n        </Pressable>\n        <Pressable style={{ borderRadius: 2, height: 40, width: 40, alignItems: 'center', justifyContent: 'center', marginLeft: 2 }} >\n          <LibIcon name={'chevron-left'} />\n        </Pressable>\n        <Pressable style={{ borderRadius: 2, height: 40, width: 40, alignItems: 'center', justifyContent: 'center', marginLeft: 2 }} >\n          <LibIcon name={'chevron-right'} />\n        </Pressable>\n        <Pressable style={{ borderRadius: 2, height: 40, width: 40, alignItems: 'center', justifyContent: 'center', marginLeft: 2 }} >\n          <LibIcon name={'page-last'} />\n        </Pressable>\n      </View>\n    )\n  }\n}\n\nexport default function m(props: LibDatatableProps): any {\n\n  const [data, setData] = useSafeState(datas)\n\n  return (\n    <View style={{ flex: 1, paddingTop: LibStyle.STATUSBAR_HEIGHT + 20, backgroundColor: '#f6f6f6' }} >\n      <ScrollView horizontal style={{ backgroundColor: 'white' }} >\n        <View>\n          <View style={{ flexDirection: 'row', overflow: 'hidden', borderLeftWidth: 1, borderColor: \"#a9a9a9\", marginHorizontal: 16 }} >\n            <Header.TextSortable title={'ID'} numeric />\n            <Header.TextSortable title={'Nama'} size={5} />\n            <Header.Text title={'Handphone'} size={3} />\n            <Header.Text title={'Button'} size={2} />\n            <Header.Checkbox title={'Action'} size={2} />\n          </View>\n          <ScrollView>\n            <View style={{ overflow: 'hidden', marginHorizontal: 16, borderLeftWidth: 1, borderColor: \"#a9a9a9\", borderBottomWidth: 1 }} >\n              {\n                data.map((row, idx) => {\n                  const colors = idx % 2 != 0 ? '#f9f9ff' : \"white\"\n                  return (\n                    <View key={idx.toString()} style={{ flexDirection: 'row', backgroundColor: colors }} >\n                      <Cell.Text title={idx + 1} numeric />\n                      <Cell.Text title={row.nama} size={5} />\n                      <Cell.Text title={row.phone} size={3} />\n                      <Cell.Button title={row.age} size={2} />\n                      <Cell.Checkbox title={\"Update\"} size={2} />\n                    </View>\n                  )\n                })\n              }\n            </View>\n            <Footer.Paginate />\n          </ScrollView>\n        </View>\n      </ScrollView>\n    </View>\n  )\n}","// withHooks\n\nimport { useSafeState } from 'esoftplay';\nimport { LibInput } from 'esoftplay/cache/lib/input/import';\nimport React, { useEffect, useRef } from 'react';\nimport { View } from 'react-native';\n\nexport interface MainSampleArgs {\n\n}\nexport interface MainSampleProps {\n\n}\nexport default function m(props: MainSampleProps): any {\n  const _name = useRef<LibInput>(null)\n  const [user, setUser] = useSafeState(undefined);\n  const _phone = useRef<LibInput>(null);\n\n  useEffect(() => {\n    _name.current?.getText()\n  }, [])\n\n  return (\n    <View style={{ backgroundColor: 'orange', flex: 1 }} >\n      <LibInput\n        base\n        ref={_name}\n        label={''}\n      />\n      <LibInput\n        ref={_phone}\n        label={'user'}\n      />\n    </View>\n  )\n}","// withHooks\n\n\nexport interface WebIndexArgs {\n  \n}\nexport interface WebIndexProps {\n  \n}\nexport default function m(props: WebIndexProps): any {\n  return null\n}","import _global from 'esoftplay/_global';\nimport { initializeApp } from 'firebase/app';\nimport { collection, getDocs, getFirestore } from 'firebase/firestore/lite';\n\n\nconst Firestore = {\n  init() {\n    _global.firebaseApp = initializeApp({\n      \"apiKey\": \"AIzaSyB04JT4JJfFsArIccAjBEn1nwIlg8EVWx4\",\n      \"authDomain\": \"bigbang-online.firebaseapp.com\",\n      \"databaseURL\": \"https://bigbang-online.firebaseio.com/\",\n      \"storageBucket\": \"gs://bigbang-online.appspot.com/\",\n      \"projectId\": \"bigbang-online\"\n    })\n  },\n  db() {\n    if (!_global.firebaseFirestore)\n      _global.firebaseFirestore = getFirestore(_global.firebaseApp)\n    return _global.firebaseFirestore\n  },\n  add: {\n    doc() {\n\n    },\n    collection() {\n\n    }\n  },\n  get: {\n    doc() {\n\n    },\n    collection(path: string, cb: (arr: any[]) => void) {\n      const colRef = collection(Firestore.db(), path)\n      let datas: any[] = []\n      getDocs(colRef).then((snap) => {\n        snap.docs.forEach((doc) => {\n          datas.push({ data: doc.data(), id: doc.id })\n        })\n        cb(datas)\n      })\n    }\n  },\n  listen: {\n    collection() {\n\n    },\n    doc() {\n\n    }\n  },\n  update: {\n    collection() {\n\n    },\n    doc() {\n\n    }\n  },\n  query() {\n\n  },\n  paginate() {\n\n  }\n}\n\nexport default Firestore","// withHooks\n\nimport { useSafeState } from 'esoftplay';\nimport React, { useEffect } from 'react';\nimport { View } from 'react-native';\nimport Firestore from '../../libs/firestore';\n\nexport interface MainIndexArgs {\n\n}\nexport interface MainIndexProps {\n\n}\n\nexport default function m(props: MainIndexProps): any {\n  const [user, setUsers] = useSafeState([])\n\n  useEffect(() => {\n    (async () => {\n      Firestore.init()\n      Firestore.db()\n      Firestore.get.collection('users', (list) => {\n        console.log(list)\n      })\n    })()\n\n  }, [])\n\n\n  return (\n    <View style={{ flex: 1, backgroundColor: '#ccc'}} >\n      {/* <MainDatatable /> */}\n    </View>\n  )\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  const isEnvProduction = process.env.NODE_ENV === \"production\";\n  if (isEnvProduction && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}","\nimport { LibNotification } from 'esoftplay/cache/lib/notification/import';\nimport { UserIndex } from 'esoftplay/cache/user/index/import';\nimport * as ErrorReport from 'esoftplay/error';\nimport { globalIdx } from 'esoftplay/global';\nimport * as Notifications from 'expo-notifications';\nimport React, { useEffect } from 'react';\nimport { enableFreeze, enableScreens } from 'react-native-screens';\n\t\t\n\nimport * as serviceWorkerRegistration from \"./src/serviceWorkerRegistration\";\nserviceWorkerRegistration.register();\nenableFreeze()\nenableScreens()\n\t\t\n\nNotifications.addNotificationResponseReceivedListener(x => LibNotification.onAction(x));\n\nexport default function App() {\n\tuseEffect(() => {\n\t\tglobalIdx.reset()\n\t\tErrorReport.getError()\n\t}, [])\n\n\treturn (<UserIndex />)\n}","module.exports = __webpack_public_path__ + \"static/media/adaptive-icon.e4e80208.png\";","module.exports = __webpack_public_path__ + \"static/media/favicon.fa4783d1.png\";","const { createRunOncePlugin, withAndroidManifest } = require('@expo/config-plugins');\n\n/**\n * @typedef {import('@expo/config-plugins').ConfigPlugin} ConfigPlugin\n * @typedef {import('@expo/config-plugins').AndroidManifest} AndroidManifest\n */\n\n/**\n * Remove the custom Expo dev client scheme from intent filters, which are set to `autoVerify=true`.\n * The custom scheme `<data android:scheme=\"exp+<slug>\"/>` seems to block verification for these intent filters.\n * This plugin makes sure there is no scheme in the autoVerify intent filters, that starts with `exp+`.\n * \n * @type {ConfigPlugin}\n */\nconst withAndroidVerfiedLinksWorkaround = (config) => (\n  withAndroidManifest(config, (config) => {\n    config.modResults = removeExpoSchemaFromVerifiedIntentFilters(config.modResults);\n    return config;\n  })\n);\n\n/**\n * Iterate over all `autoVerify=true` intent filters, and pull out schemes starting with `exp+`.\n * \n * @param {AndroidManifest} androidManifest\n */\nfunction removeExpoSchemaFromVerifiedIntentFilters(androidManifest) {\n  // see: https://github.com/expo/expo-cli/blob/f1624c75b52cc1c4f99354ec4021494e0eff74aa/packages/config-plugins/src/android/Scheme.ts#L164-L179\n  for (const application of androidManifest.manifest.application || []) {\n    for (const activity of application.activity || []) {\n      if (activityHasSingleTaskLaunchMode(activity)) {\n        for (const intentFilter of activity['intent-filter'] || []) {\n          if (intentFilterHasAutoVerification(intentFilter) && intentFilter?.data) {\n            intentFilter.data = intentFilterRemoveSchemeFromData(intentFilter, (scheme) => scheme?.startsWith('exp+'));\n          }\n        }\n        break;\n      }\n    }\n  }\n\n  return androidManifest;\n}\n\n/**\n * Determine if the activity should contain the intent filters to clean.\n * \n * @see https://github.com/expo/expo-cli/blob/f1624c75b52cc1c4f99354ec4021494e0eff74aa/packages/config-plugins/src/android/Scheme.ts#L166\n */\nfunction activityHasSingleTaskLaunchMode(activity) {\n  return activity?.$?.['android:launchMode'] === 'singleTask';\n}\n\n/**\n * Determine if the intent filter has `autoVerify=true`.\n */\nfunction intentFilterHasAutoVerification(intentFilter) {\n  return intentFilter?.$?.['android:autoVerify'] === 'true';\n}\n\n/**\n * Remove schemes from the intent filter that matches the function.\n */\nfunction intentFilterRemoveSchemeFromData(intentFilter, schemeMatcher) {\n  return intentFilter?.data?.filter(entry => !schemeMatcher(entry?.$['android:scheme'] || ''));\n}\n\nmodule.exports = createRunOncePlugin(withAndroidVerfiedLinksWorkaround, 'withAndroidVerfiedLinksWorkaround', '1.0.0');"],"sourceRoot":""}